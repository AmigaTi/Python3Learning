# nginx反向代理配置
server {
    # 配置监听端口
    listen      80;

    root       /srv/awesome/www;
    access_log /srv/awesome/log/access_log;
    error_log  /srv/awesome/log/error_log;

    # 配置访问域名
    # server_name awesome.shellever.com;

    # Windows访问虚拟机上的Ubuntu 14.04 server的Web服务器设置
    # 使用ifconfig先查看虚拟机的ip，并将其设置在此处，
    # 在Windows上就可以使用浏览器访问了
    server_name 192.168.1.104

    client_max_body_size 1m;    # 允许客户端请求的最大单文件字节数

    # 负责压缩数据流
    gzip            on;         # 开启gzip压缩输出
    gzip_min_length 1024;       # 最小压缩文件大小
    gzip_buffers    4 8k;       # 压缩缓冲区
    # 压缩类型，默认已包含为text/html，故可以省略
    gzip_types      text/css application/x-javascript application/json;

    # 指定 nginx 是否调用sendfile 函数（zero copy 方式）来输出文件，对于普通应用，必须设为on。
    # 如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络IO处理速度，降低系统uptime。
    sendfile on;

    # 标题上的图标设置
    location /favicon.ico {
        root /srv/awesome/www;
    }

    # 静态资源文件设置
    location ~ ^\/static\/.*$ {
        root /srv/awesome/www;
    }

    # 对'/'启用反向代理
    location / {
        # 设置被代理的服务器URL
        proxy_pass       http://127.0.0.1:9000;
        # proxy_redirect   off;

        # 设置将代理服务器收到的用户信息传到真实服务器上
        # 变量
        # $remote_addr = 客户端ip
        # $host = 与请求头部中“Host”行指定的值或是request到达的server的名字（没有Host行）一样
        # $proxy_add_x_forwarded_for =
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

# 正则表达式匹配，其中：
# * ~ 为区分大小写匹配
# * ~* 为不区分大小写匹配
# * !~和!~*分别为区分大小写不匹配及不区分大小写不匹配
# 文件及目录匹配，其中：
# * -f和!-f用来判断是否存在文件
# * -d和!-d用来判断是否存在目录
# * -e和!-e用来判断是否存在文件或目录
# * -x和!-x用来判断文件是否可执行
# flag标记有：
# * last 相当于Apache里的[L]标记，表示完成rewrite
# * break 终止匹配, 不再匹配后面的规则
# * redirect 返回302临时重定向 地址栏会显示跳转后的地址
# * permanent 返回301永久重定向 地址栏会显示跳转后的地址